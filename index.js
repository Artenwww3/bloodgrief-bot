const { Client, GatewayIntentBits, ActivityType, PermissionsBitField } = require('discord.js');

const client = new Client({
  intents: [
    GatewayIntentBits.Guilds,
    GatewayIntentBits.GuildMessages,
    GatewayIntentBits.MessageContent,
    GatewayIntentBits.GuildMembers,
    GatewayIntentBits.GuildVoiceStates
  ]
});

client.once('ready', () => {
  console.log(`üü¢ –ë–æ—Ç ${client.user.tag} —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!`);

  client.user.setPresence({
    activities: [{
      name: 'ü©∏ –û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –±–æ—Ç –ø—Ä–æ–µ–∫—Ç–∞ BLOODGRIEF ü©∏',
      type: ActivityType.Playing
    }],
    status: 'dnd'
  });
});

client.on('messageCreate', async (message) => {
  if (message.author.bot) return;

  const args = message.content.trim().split(/ +/g);
  const command = args.shift().toLowerCase();

  // üí¨ –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
  if (command === '!–ø—Ä–∏–≤–µ—Ç' || command === '!hello') {
    return message.reply('‚ò†Ô∏è –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ BLOODGRIEF, —Å–º–µ—Ä—Ç–Ω—ã–π.');
  }

  // ‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
  if (command === '!–∏–Ω—Ñ–æ') {
    return message.channel.send(`ü©∏ –≠—Ç–æ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –±–æ—Ç –ø—Ä–æ–µ–∫—Ç–∞ **BLOODGRIEF**.\n–ú–æ–¥–µ—Ä–∞—Ü–∏—è, –∑–∞—â–∏—Ç–∞, —Ç–∏–∫–µ—Ç—ã –∏ –∞–Ω—Ç–∏–∫–∏–±–µ—Ä–º—Ä–∞–∫. –í—ã–∂–∏–≤–∞–π –∏–ª–∏ –ø—Ä–æ–∏–≥—Ä–∞–π.`);
  }

  // üßπ –ö–æ–º–∞–Ω–¥–∞ —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π
  if (command === '!—Å–Ω–µ—Å–∏') {
    if (!message.member.permissions.has(PermissionsBitField.Flags.ManageMessages)) {
      return message.reply('‚ùå –£ —Ç–µ–±—è –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π.');
    }

    const count = parseInt(args[0]);
    if (!count || isNaN(count) || count < 1 || count > 100) {
      return message.reply('‚ùó –£–∫–∞–∂–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç 1 –¥–æ 100, –Ω–∞–ø—Ä–∏–º–µ—Ä: `!—Å–Ω–µ—Å–∏ 20`');
    }

    try {
      await message.channel.bulkDelete(count + 1, true);
      message.channel.send(`üßπ –£–¥–∞–ª–µ–Ω–æ ${count} —Å–æ–æ–±—â–µ–Ω–∏–π`).then(msg => {
        setTimeout(() => msg.delete(), 3000);
      });
    } catch (err) {
      console.error(err);
      message.reply('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è. –í–æ–∑–º–æ–∂–Ω–æ, –æ–Ω–∏ —Å–ª–∏—à–∫–æ–º —Å—Ç–∞—Ä—ã–µ –∏–ª–∏ –Ω–µ—Ç –ø—Ä–∞–≤.');
    }
  }
});

// üîê –¢–æ–∫–µ–Ω (—á–µ—Ä–µ–∑ Render –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é TOKEN)
client.login(process.env.TOKEN);
